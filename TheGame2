#include <stdio.h>
#include <stdlib.h>
#include <conio.h> 
#include <windows.h>
#include <string.h>
#include <time.h>

#define ALTURA 40
#define LARGURA 40

// Definicoes de simbolos
#define JOGADOR '&'
#define PAREDE '*'
#define CHAVE '@'
#define PORTA 'D'
#define PORTA_ABERTA '='
#define NPC 'P'
#define VAZIO ' '
#define BOTAO 'O'
#define ESPINHO '#'
#define MONSTRO1 'X'
#define MONSTRO2 'V'

// Variaveis globais
char mapa[ALTURA][LARGURA + 1];
int jogadorX = 1, jogadorY = 1;
int chaveColetada = 0, portaAberta = 0, reinicios = 0;
int monstroX = 6, monstroY = 10;
int monstro2X = 1, monstro2Y = 1;
int tele1X = 22, tele1Y = 36;
int tele2X = 5, tele2Y = 1;
int i, j, y, x;

void limparTela() {
    system("cls");
}

void exibirTitulo() {
    limparTela();
    printf(" _________  ____  ____  ________                         \n");
    printf("|  _   _  ||_   ||   _||_   __  |                        \n");
    printf("|_/ | | \\_|  | |__| |    | |_ \\_|                        \n");
    printf("    | |      |  __  |    |  _| _                         \n");
    printf("   _| |_    _| |  | |_  _| |__/ |                        \n");
    printf("  |_____|  |____||____||________|___  ________    _____ \n");
    printf(" .' ___  |     / \\     |_   \\  /   _||_   __  |  / ___ `.\n");
    printf("/ .'   \\_|    / _ \\      |   \\ /   |    | |_ \\_| |_/___) |\n");
    printf("| |   ____   / ___ \\     | |\\  /| |    |  _| _   .'____.'\n");
    printf("\\ `.___]  |_/ /   \\ \\_  _| |_\\/| |_  _| |__/ | / /_____  \n");
    printf(" `._____.'|____| |____||_____||_____||________| |_______|\n");
    printf("\nPressione qualquer tecla para continuar...\n");
    _getch();
}

void limparMapa() {
    for (i = 0; i < ALTURA; i++) {
        for (j = 0; j < LARGURA; j++) {
            mapa[i][j] = VAZIO;
        }
        mapa[i][LARGURA] = '\0';
    }
}

void carregarMapaVila() {
    limparMapa();
	char temp[10][11] = {
        "**********",
        "* @      *",
        "*        *",
        "*  P     *",
        "*        *",
        "*        *",
        "*        *",
        "*        *",
        "*      D *",
        "**********"
    };
    for (i = 0; i < 10; i++) strcpy(mapa[i], temp[i]);
    jogadorX = 4; jogadorY = 4;
    chaveColetada = portaAberta = 0;
}

void carregarMapaFase1() {
    limparMapa();
    char* temp[10] = {
        "**********",
        "*     * D*",
        "* **** * *",
        "* *      *",
        "* * **** *",
        "*   *    *",
        "***** ****",
        "*        *",
        "* @      *",
        "**********"
    };
    for (i = 0; i < 10; i++) strcpy(mapa[i], temp[i]);

    jogadorX = 1;
    jogadorY = 1;
    chaveColetada = 0;
    portaAberta = 0;
}


void carregarMapaFase2() {
    limparMapa();
    char* temp[20] = {
        "********************",
        "*        *        D*",
        "* ** **  *  ** *** *",
        "* *   *     *    * *",
        "* * # *  *  * #  * *",
        "* *****  *  ****** *",
        "*           *    O *",
        "****** *******     *",
        "*            *     *",
        "* *** ******** *****",
        "*                * *",
        "* *** ***  ***   * *",
        "* *   * *  * *   * *",
        "* *   * *##* *   * *",
        "* *** ***  *** *** *",
        "*                  *",
        "*    *       *      *",  // Linha corrigida: removido o 'X'
        "* ***  *****  ***  **",
        "*  @                *",
        "********************"
    };

    for (i = 0; i < 20; i++) strcpy(mapa[i], temp[i]);

    jogadorX = 1;
    jogadorY = 1;
    monstroX = 10;
    monstroY = 16;
    chaveColetada = 0;
    portaAberta = 0;
}


void carregarMapaFase3() {
    char temp[40][41] = {
        "****************************************",
        "*                                  @   *",
        "*  *  *  *  *     *  *  *  *  *  *  *  *",
        "*                                  >   *",
        "*     *     *     *     *  *  *     *  *",
        "*   *   *   *   *           *      *   *",
        "*   *  *  *  * *  *  *  *  * *  *  *   *",
        "*   *     *   * *     *     *    *   * *",
        "*   *  *  *  *  *  *  * *** *  *  *   **",
        "*     *     *     * * * * *    *   * * *",
        "*  *  * *** *** * * * *  *  *  * * * * *",
        "*     *   *     * * * *     *   * * * *",
        "*  ** * *** ******* * ***** *** * * * *",
        "*     *     *     * *     *     * * * *",
        "*   ********* *** *************** * * *",
        "*             *        >       O  * * *",
        "*  *  *  *  *  *  *  *  *  *  *  *  * *",
        "*                                     *",
        "* * * * * * * * *******************   *",
        "*     * *   * *                   *   *",
        "* * * * * * *                   * *   *",
        "*     * *   *               *   *     *",
        "*     * *** * ************* * *****   *",
        "*     *   * * *           * *     *   *",
        "*   ******* * * ********* * ***** *   *",
        "*           * *       *   *     * *   *",
        "*               ***** *****       *   *",
        "*                         *     * *   *",
        "* *****************                   *",
        "* *               *                   *",
        "* * ************* *****               *",
        "* *                                   *",
        "* ******************************* *   *",
        "* D                                   *",
        "* ************************************ *",
        "*                                      *",
        "*                                      *",
        "* ************************************ *",
        "*                                      *",
        "****************************************"
    };

    int y;
    for (y = 0; y < 40; y++) {
        strcpy(mapa[y], temp[y]);
    }

    jogadorX = 4;
    jogadorY = 1;
    monstro2X = 38;
    monstro2Y = 32;

    chaveColetada = 0;
    portaAberta = 0;

    // Definindo as posições corretas dos teleportes
    tele1X = 34;
    tele1Y = 3;
    tele2X = 26;
    tele2Y = 15;
}


void moverMonstro() {
    int dx[4] = {0, -1, 0, 1};
    int dy[4] = {-1, 0, 1, 0};
    int dir = rand() % 4;

    int novoX = monstroX + dx[dir];
    int novoY = monstroY + dy[dir];

    if (novoX >= 0 && novoX < LARGURA && novoY >= 0 && novoY < ALTURA &&
        (mapa[novoY][novoX] == VAZIO || (novoX == jogadorX && novoY == jogadorY))) {

        // Limpa o local antigo se o monstro estiver visível no mapa
        if (mapa[monstroY][monstroX] == MONSTRO1)
            mapa[monstroY][monstroX] = VAZIO;

        monstroX = novoX;
        monstroY = novoY;
    }
}

void moverMonstro2() {
    int dx = 0, dy = 0;

    if (monstro2X < jogadorX) dx = 1;
    else if (monstro2X > jogadorX) dx = -1;

    if (monstro2Y < jogadorY) dy = 1;
    else if (monstro2Y > jogadorY) dy = -1;

    int novoX = monstro2X + dx;
    int novoY = monstro2Y + dy;

    if (novoX >= 0 && novoX < LARGURA && novoY >= 0 && novoY < ALTURA &&
        mapa[novoY][novoX] != PAREDE) {
        monstro2X = novoX;
        monstro2Y = novoY;
    }
}


void desenharMapa(int fase) {
    limparTela();

    int alturaMapa = ALTURA;
    if (fase == 0 || fase == 1) alturaMapa = 10;
    else if (fase == 2) alturaMapa = 20;
    else if (fase == 3) alturaMapa = 40;

    printf("Reinicios: %d | Chave: %s\n", reinicios, chaveColetada ? "SIM" : "NAO");
    printf("[WASD] mover | [I] interagir\n\n");

    for (i = 0; i < alturaMapa; i++) {
        for (j = 0; j < LARGURA; j++) {
            if (i == jogadorY && j == jogadorX)
                printf("%c", JOGADOR);
            else if (i == monstroY && j == monstroX)
                printf("%c", MONSTRO1);
            else if (fase == 3 && i == monstro2Y && j == monstro2X)
                printf("V");
            else
                printf("%c", mapa[i][j]);
        }
        printf("\n");
    }
}


void exibirTelaDerrota() {
    limparTela();
    printf("====================\n");
    printf("     VOCE PERDEU!    \n");
    printf("====================\n");
    printf("Numero maximo de reinicios atingido.\n");
    printf("Pressione qualquer tecla para voltar ao menu...\n");
    _getch();
    reinicios = 0;
}

void exibirTelaVitoria() {
    limparTela();
    printf("====================\n");
    printf("   VOCE VENCEU!!!   \n");
    printf("====================\n");
    printf("Parabens por completar todas as fases!\n");
    _getch();
}

int interagir(int fase) {
    if (mapa[jogadorY][jogadorX] == NPC) {
        if (fase == 0) {
            printf("NPC: Bem-vindo à vila. Use WASD para se mover.\nPegue a chave (@) e vá até a porta (D).\nEla é a entrada da masmorra.\n");
        }
        _getch();
    }
    else if (mapa[jogadorY][jogadorX] == CHAVE) {
        chaveColetada = 1;
        portaAberta = 1;
        mapa[jogadorY][jogadorX] = VAZIO;
        printf("Você pegou a chave! A porta agora está aberta.\n");
        _getch();

        // Abre todas as portas
        for (y = 0; y < ALTURA; y++) {
            for (x = 0; x < LARGURA; x++) {
                if (mapa[y][x] == PORTA) {
                    mapa[y][x] = PORTA_ABERTA;
                }
            }
        }
    }
    else if (mapa[jogadorY][jogadorX] == BOTAO) {
        printf("Você apertou o botão... Era uma armadilha!\n");
        _getch();
        reinicios++;
        if (reinicios >= 3) {
            exibirTelaDerrota();
            return -1;
        }
        if (fase == 0) carregarMapaVila();
        else if (fase == 1) carregarMapaFase1();
        else if (fase == 2) carregarMapaFase2();
        else if (fase == 3) carregarMapaFase3();
    }

    return 0;
}

void moverJogador(char tecla, int fase) {
    int novoX = jogadorX;
    int novoY = jogadorY;

    if (tecla == 'w') novoY--;
    if (tecla == 's') novoY++;
    if (tecla == 'a') novoX--;
    if (tecla == 'd') novoX++;

    if (novoX >= 0 && novoX < LARGURA && novoY >= 0 && novoY < ALTURA && mapa[novoY][novoX] != PAREDE) {
        jogadorX = novoX;
        jogadorY = novoY;

        // Teletransporte automático
        if (mapa[jogadorY][jogadorX] == '>') {
            if (jogadorX == tele1X && jogadorY == tele1Y) {
                jogadorX = tele2X;
                jogadorY = tele2Y;
            } else if (jogadorX == tele2X && jogadorY == tele2Y) {
                jogadorX = tele1X;
                jogadorY = tele1Y;
            }
            printf("Voce foi teleportado!\n");
            _getch();
        }
    }
}

int jogarFase(int fase) {
    if (fase == 0) carregarMapaVila();
    else if (fase == 1) carregarMapaFase1();
    else if (fase == 2) carregarMapaFase2();
    else if (fase == 3) carregarMapaFase3();

    while (1) {
        desenharMapa(fase);
        char tecla = _getch();

        if (tecla == 'i') {
            if (mapa[jogadorY][jogadorX] == PORTA_ABERTA && portaAberta) {
                printf("Voce passou para a proxima fase!\n");
                _getch();
                if (fase == 0) return jogarFase(1);
                else if (fase == 1) return jogarFase(2);
                else if (fase == 2) return jogarFase(3);
                else if (fase == 3) {
                    exibirTelaVitoria();
                    return 0;
                }
            } else {
                if (interagir(fase) == -1) return -1;
            }
        } else if (tecla == 'w' || tecla == 'a' || tecla == 's' || tecla == 'd') {
            moverJogador(tecla, fase);

            if (fase == 2) moverMonstro();
            if (fase == 3) moverMonstro2();
            else {
                monstro2X = -1;
                monstro2Y = -1;
            }

            if (mapa[jogadorY][jogadorX] == ESPINHO ||
                (jogadorX == monstroX && jogadorY == monstroY) ||
                (jogadorX == monstro2X && jogadorY == monstro2Y)) {
                reinicios++;
                if (reinicios >= 3) {
                    exibirTelaDerrota();
                    return -1;
                }
                printf("Voce tocou em um perigo! Reiniciando fase...\n");
                _getch();

                if (fase == 0) carregarMapaVila();
                else if (fase == 1) carregarMapaFase1();
                else if (fase == 2) carregarMapaFase2();
                else if (fase == 3) carregarMapaFase3();
            }
        }
    }
}



void creditos() {
    limparTela();
    printf("=== CREDITOS ===\nDesenvolvido por: \nIgor Cecim Vilhena\n Lucas Augusto Teixeira Silva Rodrigues\n Herbert Aciolly Leao de Jesus\n================\nPressione qualquer tecla para voltar...\n");
    _getch();
}

void sairJogo() {
    limparTela();
    printf("Obrigado por jogar The Game 2!\n");
    Sleep(1000);
    exit(0);
}

int menu() {
    int opcao;
    do {
        limparTela();
        printf("=== THE GAME 2 ===\n1. Jogar\n2. Creditos\n3. Sair\nEscolha: ");
        scanf("%d", &opcao);
        while (getchar() != '\n');
    } while (opcao < 1 || opcao > 3);
    return opcao;
}

int main() {
    srand(time(NULL));
    exibirTitulo();
    while (1) {
        int escolha = menu();
        if (escolha == 1) {
            int r = jogarFase(0);
            if (r == -1) continue;
        } else if (escolha == 2) creditos();
        else sairJogo();
    }
    return 0;
}
