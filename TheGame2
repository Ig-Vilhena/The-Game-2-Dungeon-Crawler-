#include <stdio.h>
#include <stdlib.h>
#include <conio.h> // Para Windows (_getch)
#include <windows.h> // Para Sleep
#include <string.h>
#include <time.h>

#define LARGURA 20
#define ALTURA 20

// Definicoes de simbolos
#define JOGADOR '&'
#define PAREDE '*'
#define CHAVE '@'
#define PORTA 'D'
#define PORTA_ABERTA '='
#define NPC 'P'
#define VAZIO ' '
#define BOTAO 'O'
#define ESPINHO '#'
#define MONSTRO1 'X'

// Variaveis globais
char mapa[ALTURA][LARGURA + 1];
int jogadorX = 1;
int jogadorY = 1;
int chaveColetada = 0;
int portaAberta = 0;
int reinicios = 0;
int monstroX = 6, monstroY = 10;

void limparTela() {
    system("cls");
}

void exibirTitulo() {
    limparTela();
    printf(" _________  ____  ____  ________                         \n");
    printf("|  _   _  ||_   ||   _||_   __  |                        \n");
    printf("|_/ | | \\_|  | |__| |    | |_ \\_|                        \n");
    printf("    | |      |  __  |    |  _| _                         \n");
    printf("   _| |_    _| |  | |_  _| |__/ |                        \n");
    printf("  |_____|  |____||____||________|___  ________    _____ \n");
    printf(" .' ___  |     / \\     |_   \\  /   _||_   __  |  / ___ `.\n");
    printf("/ .'   \\_|    / _ \\      |   \\ /   |    | |_ \\_| |_/___) |\n");
    printf("| |   ____   / ___ \\     | |\\  /| |    |  _| _   .'____.'\n");
    printf("\\ `.___]  |_/ /   \\ \\_  _| |_\\/| |_  _| |__/ | / /_____  \n");
    printf(" `._____.'|____| |____||_____||_____||________| |_______|\n");
    printf("\nPressione qualquer tecla para continuar...\n");
    _getch();
}

void carregarMapaVila() {
    char temp[10][11] = {
        "**********",
        "*        *",
        "* P      *",
        "*    @   *",
        "*        *",
        "*        *",
        "*     D  *",
        "*        *",
        "*        *",
        "**********"
    };
    int i;
    for (i = 0; i < 10; i++) {
        strcpy(mapa[i], temp[i]);
    }
    jogadorX = 4;
    jogadorY = 4;
    chaveColetada = 0;
    portaAberta = 0;
}

void carregarMapaFase1() {
    char temp[10][11] = {
        "**********",
        "*   @    *",
        "* ****** *",
        "*        *",
        "*        *",
        "*        *",
        "*     D  *",
        "*        *",
        "*        *",
        "**********"
    };
    int i;
    for (i = 0; i < 10; i++) {
        strcpy(mapa[i], temp[i]);
    }
    jogadorX = 4;
    jogadorY = 4;
    chaveColetada = 0;
    portaAberta = 0;
}

void carregarMapaFase2() {
    char temp[ALTURA][LARGURA + 1] = {
        "********************",
        "*               D*",
        "* *************** *",
        "* *             * *",
        "* *  #########     *",
        "* *  #           * *",
        "* *  #   @   #   * *",
        "* *  #       #   * *",
        "* *  #########   * *",
        "* *              * *",
        "* *              * *",
        "* *              * *",
        "* **************** *",
        "*                  *",
        "*   ************   *",
        "*        O     *   *",
        "*              *   *",
        "*   ************   *",
        "*                  *",
        "********************"
    };
    int i;
    for (i = 0; i < ALTURA; i++) {
        strcpy(mapa[i], temp[i]);
    }
    jogadorX = 2;
    jogadorY = 1;
    monstroX = 6;
    monstroY = 10;
    mapa[monstroY][monstroX] = MONSTRO1;
    chaveColetada = 0;
    portaAberta = 0;
    reinicios = 0;
}

void moverMonstro() {
    int dir = rand() % 4;
    int dx[4] = {0, -1, 0, 1};
    int dy[4] = {-1, 0, 1, 0};

    int novoX = monstroX + dx[dir];
    int novoY = monstroY + dy[dir];

    if (novoX >= 0 && novoX < LARGURA && novoY >= 0 && novoY < ALTURA &&
        (mapa[novoY][novoX] == VAZIO || (novoX == jogadorX && novoY == jogadorY))) {
        mapa[monstroY][monstroX] = VAZIO;
        monstroX = novoX;
        monstroY = novoY;
        mapa[monstroY][monstroX] = MONSTRO1;
    }
}

void desenharMapa() {
    limparTela();
    int i, j;
    printf("Reinicios: %d\n", reinicios);
    for (i = 0; i < ALTURA; i++) {
        for (j = 0; j < LARGURA; j++) {
            if (i == jogadorY && j == jogadorX)
                printf("%c", JOGADOR);
            else
                printf("%c", mapa[i][j]);
        }
        printf("\n");
    }
    printf("\n[WASD] mover | [I] interagir\n");
    printf("Chave: %s\n", chaveColetada ? "SIM" : "NAO");
}

void exibirTelaDerrota() {
    limparTela();
    printf("====================\n");
    printf("     VOCE PERDEU!    \n");
    printf("====================\n");
    printf("Numero maximo de reinicios atingido.\n");
    printf("Pressione qualquer tecla para voltar ao menu...\n");
    _getch();

    // Resetar variÃ¡veis para o novo jogo
    reinicios = 0;
    jogadorX = 1;
    jogadorY = 1;
    chaveColetada = 0;
    portaAberta = 0;
}

void interagir(int fase) {
    char obj = mapa[jogadorY][jogadorX];
    if (obj == CHAVE) {
        chaveColetada = 1;
        mapa[jogadorY][jogadorX] = VAZIO;
        printf("Voce pegou a chave!\n");
        _getch();
    } else if (obj == PORTA) {
        if (chaveColetada) {
            mapa[jogadorY][jogadorX] = PORTA_ABERTA;
            portaAberta = 1;
            printf("Voce abriu a porta!\n");
            _getch();
        } else {
            printf("Voce precisa da chave.\n");
            _getch();
        }
    } else if (obj == BOTAO) {
        printf("Voce pressionou o botao...\nBOOM!\n");
        reinicios++;
        _getch();
    	if (reinicios >= 3) {
    		exibirTelaDerrota();
    		return;
		}
		
		carregarMapaFase2();
		
    } else if (obj == NPC && fase == 0) {
        printf("NPC: Bem-vindo a vila. Use WASD para se mover.\n");
        printf("Pegue a chave (@) e va ate a porta (D).\n");
        printf("Ela e a entrada da masmorra.\n");
        _getch();
    }
}

void moverJogador(char tecla) {
    int novoX = jogadorX;
    int novoY = jogadorY;

    if (tecla == 'w') novoY--;
    if (tecla == 's') novoY++;
    if (tecla == 'a') novoX--;
    if (tecla == 'd') novoX++;

    if (novoX >= 0 && novoX < LARGURA && novoY >= 0 && novoY < ALTURA && mapa[novoY][novoX] != PAREDE) {
        jogadorX = novoX;
        jogadorY = novoY;
    }
}

void jogarFase(int fase) {
    if (fase == 0) carregarMapaVila();
    else if (fase == 1) carregarMapaFase1();
    else if (fase == 2) carregarMapaFase2();

    while (!portaAberta) {
        desenharMapa();
        char tecla = _getch();
        if (tecla == 'i') {
            interagir(fase);
        } else {
            moverJogador(tecla);
            if (fase == 2) moverMonstro();
            if ((mapa[jogadorY][jogadorX] == ESPINHO) || (jogadorX == monstroX && jogadorY == monstroY)) {
                reinicios++;
                if (reinicios >= 3) {
   					exibirTelaDerrota();
    				return;
				} else {
                    printf("Voce tocou em um perigo! Reiniciando fase...\n");
                    _getch();
                    carregarMapaFase2();
                }
            }
        }
    }
    limparTela();
    printf("Parabens! Voce terminou a Fase %d!\n", fase);
    _getch();
    if (fase == 0) jogarFase(1);
    else if (fase == 1) jogarFase(2);
}

void creditos() {
    limparTela();
    printf("=== CREDITOS ===\n");
    printf("Desenvolvido por: Seu Nome Aqui\n");
    printf("Baseado em Gousmas War e Cobra na Caixa\n");
    printf("================\n");
    printf("Pressione qualquer tecla para voltar...\n");
    _getch();
}

void sairJogo() {
    limparTela();
    printf("Obrigado por jogar The Game 2!\n");
    Sleep(1000);
    exit(0);
}

int menu() {
    int opcao;
    do {
        limparTela();
        printf("=== THE GAME 2 ===\n");
        printf("1. Jogar\n");
        printf("2. Creditos\n");
        printf("3. Sair\n");
        printf("Escolha: ");
        scanf("%d", &opcao);
        while (getchar() != '\n');
    } while (opcao < 1 || opcao > 3);
    return opcao;
}

int main() {
    srand(time(NULL));
    exibirTitulo();
    while (1) {
        int escolha = menu();
        if (escolha == 1) jogarFase(0);
        else if (escolha == 2) creditos();
        else sairJogo();
    }
    return 0;
}
