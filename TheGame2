#include <stdio.h>
#include <stdlib.h>
#include <conio.h> 
#include <windows.h>
#include <string.h>
#include <time.h>

#define ALTURA 40
#define LARGURA 40

// Definicoes de simbolos
#define JOGADOR '&'
#define PAREDE '*'
#define CHAVE '@'
#define PORTA 'D'
#define PORTA_ABERTA '='
#define NPC 'P'
#define VAZIO ' '
#define BOTAO 'O'
#define ESPINHO '#'
#define MONSTRO1 'X'

// Variaveis globais
char mapa[ALTURA][LARGURA + 1];
int jogadorX = 1, jogadorY = 1;
int chaveColetada = 0, portaAberta = 0, reinicios = 0;
int monstroX = 6, monstroY = 10;
int monstro2X = 1, monstro2Y = 1;
int tele1X = 22, tele1Y = 36;
int tele2X = 5, tele2Y = 1;
int i, j;

void limparTela() {
    system("cls");
}

void exibirTitulo() {
    limparTela();
    printf(" _________  ____  ____  ________                         \n");
    printf("|  _   _  ||_   ||   _||_   __  |                        \n");
    printf("|_/ | | \\_|  | |__| |    | |_ \\_|                        \n");
    printf("    | |      |  __  |    |  _| _                         \n");
    printf("   _| |_    _| |  | |_  _| |__/ |                        \n");
    printf("  |_____|  |____||____||________|___  ________    _____ \n");
    printf(" .' ___  |     / \\     |_   \\  /   _||_   __  |  / ___ `.\n");
    printf("/ .'   \\_|    / _ \\      |   \\ /   |    | |_ \\_| |_/___) |\n");
    printf("| |   ____   / ___ \\     | |\\  /| |    |  _| _   .'____.'\n");
    printf("\\ `.___]  |_/ /   \\ \\_  _| |_\\/| |_  _| |__/ | / /_____  \n");
    printf(" `._____.'|____| |____||_____||_____||________| |_______|\n");
    printf("\nPressione qualquer tecla para continuar...\n");
    _getch();
}

void limparMapa() {
    for (i = 0; i < ALTURA; i++) {
        for (j = 0; j < LARGURA; j++) {
            mapa[i][j] = VAZIO;
        }
        mapa[i][LARGURA] = '\0';
    }
}

void carregarMapaVila() {
    limparMapa();
	char temp[10][11] = {
        "**********",
        "*        *",
        "* P      *",
        "*    @   *",
        "*        *",
        "*        *",
        "*     D  *",
        "*        *",
        "*        *",
        "**********"
    };
    for (i = 0; i < 10; i++) strcpy(mapa[i], temp[i]);
    jogadorX = 4; jogadorY = 4;
    chaveColetada = portaAberta = 0;
}

void carregarMapaFase1() {
    limparMapa();
    strcpy(mapa[0],  "**********");
    strcpy(mapa[1],  "*@     * D");
    strcpy(mapa[2],  "* **** * *");
    strcpy(mapa[3],  "* *      *");
    strcpy(mapa[4],  "* * **** *");
    strcpy(mapa[5],  "*   *    *");
    strcpy(mapa[6],  "***** ****");
    strcpy(mapa[7],  "*        *");
    strcpy(mapa[8],  "*        *");
    strcpy(mapa[9],  "**********");
    jogadorX = 1;
    jogadorY = 1;
    chaveColetada = portaAberta = 0;
}

void carregarMapaFase2() {
    limparMapa();
    char* temp[20] = {
        "********************",
        "*@       *        D",
        "* *****  *  ****** *",
        "* *   *     *    * *",
        "* * # *  *  * #  * *",
        "* *****  *  ****** *",
        "*     *     *   *  *",
        "****** ****** * *  *",
        "*O    *      * *   *",
        "* *** ******** *****",
        "*                * *",
        "* *** ***  ***   * *",
        "* *   * *  * *   * *",
        "* * # * *##* * # * *",
        "* *** ***  *** *** *",
        "*                  *",
        "*    *   X   *      *",
        "* ***  *****  ***  **",
        "*                  *",
        "********************"
    };
    for (i = 0; i < 20; i++) strcpy(mapa[i], temp[i]);
    jogadorX = 1;
    jogadorY = 1;
    monstroX = 10;
    monstroY = 16;
    mapa[monstroY][monstroX] = MONSTRO1;
    chaveColetada = portaAberta = 0;
}

void carregarMapaFase3() {
    int y;
    char temp[40][41] = {
        "****************************************",
        "*         @                            *",
        "* ************************************ *",
        "* *                                  * *",
        "* *  #########          X           * *",
        "* *  #                          >   * *",
        "* *  #   >   #   O                D * *",
        "* *  #       #                   *** *",
        "* *  #########                      * *",
        "* *                                  * *",
        "* *                                  * *",
        "* *                                  * *",
        "* ************************************ *",
        "*                                      *",
        "*   ************                       *",
        "*              *                       *",
        "*              *                       *",
        "*   ************                       *",
        "*                                      *",
        "*                                      *",
        "* ************************************ *",
        "* *                                  * *",
        "* *                                  * *",
        "* *                                  * *",
        "* *                                  * *",
        "* *                                  * *",
        "* *                                  * *",
        "* *                                  * *",
        "* *                                  * *",
        "* *                                  * *",
        "* *                                  * *",
        "* ************************************ *",
        "*                                      *",
        "*   ************                       *",
        "*              *                       *",
        "*              *                       *",
        "*   ************                       *",
        "*                                      *",
        "*                                      *",
        "****************************************"
    };

    for (y = 0; y < 40; y++) {
        strcpy(mapa[y], temp[y]);
    }

    jogadorX = 9;
    jogadorY = 1;
    monstroX = 26;
    monstroY = 4;
    mapa[monstroY][monstroX] = MONSTRO1;
    chaveColetada = 0;
    portaAberta = 0;
}


void moverMonstro() {
    int dx[4] = {0, -1, 0, 1};
    int dy[4] = {-1, 0, 1, 0};
    int dir = rand() % 4;

    int novoX = monstroX + dx[dir];
    int novoY = monstroY + dy[dir];

    if (novoX >= 0 && novoX < LARGURA && novoY >= 0 && novoY < ALTURA &&
        (mapa[novoY][novoX] == VAZIO || (novoX == jogadorX && novoY == jogadorY))) {
        mapa[monstroY][monstroX] = VAZIO;
        monstroX = novoX; monstroY = novoY;
        mapa[monstroY][monstroX] = MONSTRO1;
    }
}

void moverMonstro2() {
    int dx = 0, dy = 0;

    if (monstro2X < jogadorX) dx = 1;
    else if (monstro2X > jogadorX) dx = -1;

    if (monstro2Y < jogadorY) dy = 1;
    else if (monstro2Y > jogadorY) dy = -1;

    int novoX = monstro2X + dx;
    int novoY = monstro2Y + dy;

    // Só move se não for parede
    if (novoX >= 0 && novoX < LARGURA && novoY >= 0 && novoY < ALTURA &&
        mapa[novoY][novoX] != PAREDE && mapa[novoY][novoX] != MONSTRO1) {
        mapa[monstro2Y][monstro2X] = VAZIO;
        monstro2X = novoX;
        monstro2Y = novoY;
        mapa[monstro2Y][monstro2X] = 'V';
    }
}

void desenharMapa() {
    limparTela();
    printf("Reinicios: %d\n", reinicios);
    for (i = 0; i < ALTURA; i++) {
        for (j = 0; j < LARGURA; j++) {
            if (i == jogadorY && j == jogadorX) printf("%c", JOGADOR);
            else printf("%c", mapa[i][j]);
        }
        printf("\n");
    }
    printf("\n[WASD] mover | [I] interagir\nChave: %s\n", chaveColetada ? "SIM" : "NAO");
}

void exibirTelaDerrota() {
    limparTela();
    printf("====================\n");
    printf("     VOCE PERDEU!    \n");
    printf("====================\n");
    printf("Numero maximo de reinicios atingido.\n");
    printf("Pressione qualquer tecla para voltar ao menu...\n");
    _getch();
    reinicios = 0;
}

void exibirTelaVitoria() {
    limparTela();
    printf("====================\n");
    printf("   VOCE VENCEU!!!   \n");
    printf("====================\n");
    printf("Parabens por completar todas as fases!\n");
    _getch();
}

int interagir(int fase) {
    char obj = mapa[jogadorY][jogadorX];
    if (obj == CHAVE) {
        chaveColetada = 1;
        mapa[jogadorY][jogadorX] = VAZIO;
        printf("Voce pegou a chave!\n");
        _getch();
    } else if (obj == PORTA) {
        if (chaveColetada) {
            mapa[jogadorY][jogadorX] = PORTA_ABERTA;
            portaAberta = 1;
            printf("Voce abriu a porta!\n");
            _getch();
        } else {
            printf("Voce precisa da chave.\n");
            _getch();
        }
    } else if (obj == BOTAO) {
        printf("Voce pressionou o botao...\nBOOM!\n");
        _getch();
        reinicios++;
        if (reinicios >= 3) {
            exibirTelaDerrota();
            return -1;
        }
        carregarMapaFase2();
    } else if (obj == NPC && fase == 0) {
        printf("NPC: Bem-vindo a vila. Use WASD para se mover.\nPegue a chave (@) e va ate a porta (D).\nEla e a entrada da masmorra.\n");
        _getch();
    }
}

void moverJogador(char tecla) {
    int novoX = jogadorX;
    int novoY = jogadorY;

    if (tecla == 'w') novoY--;
    if (tecla == 's') novoY++;
    if (tecla == 'a') novoX--;
    if (tecla == 'd') novoX++;

    if (novoX >= 0 && novoX < LARGURA && novoY >= 0 && novoY < ALTURA && mapa[novoY][novoX] != PAREDE) {
        jogadorX = novoX;
        jogadorY = novoY;
    }
}

int jogarFase(int fase) {
    if (fase == 0) carregarMapaVila();
    else if (fase == 1) carregarMapaFase1();
    else if (fase == 2) carregarMapaFase2();

    while (!portaAberta) {
        desenharMapa();
        char tecla = _getch();
        if (tecla == 'i') {
            if (interagir(fase) == -1) return -1;
        } else {
            moverJogador(tecla);
            if (fase == 2) moverMonstro();
            if (mapa[jogadorY][jogadorX] == ESPINHO || (jogadorX == monstroX && jogadorY == monstroY)) {
                reinicios++;
                if (reinicios >= 3) {
                    exibirTelaDerrota();
                    return -1;
                }
                printf("Voce tocou em um perigo! Reiniciando fase...\n");
                _getch();
                carregarMapaFase2();
            }
        }
    }

    limparTela();
    printf("Parabens! Voce terminou a Fase %d!\n", fase);
    _getch();
    if (fase == 0) jogarFase(1);
    else if (fase == 1) jogarFase(2);
}

void creditos() {
    limparTela();
    printf("=== CREDITOS ===\nDesenvolvido por: Seu Nome Aqui\nBaseado em Gousmas War e Cobra na Caixa\n================\nPressione qualquer tecla para voltar...\n");
    _getch();
}

void sairJogo() {
    limparTela();
    printf("Obrigado por jogar The Game 2!\n");
    Sleep(1000);
    exit(0);
}

int menu() {
    int opcao;
    do {
        limparTela();
        printf("=== THE GAME 2 ===\n1. Jogar\n2. Creditos\n3. Sair\nEscolha: ");
        scanf("%d", &opcao);
        while (getchar() != '\n');
    } while (opcao < 1 || opcao > 3);
    return opcao;
}

int main() {
    srand(time(NULL));
    exibirTitulo();
    while (1) {
        int escolha = menu();
        if (escolha == 1) {
            int r = jogarFase(0);
            if (r == -1) continue;
        }
        else if (escolha == 2) creditos();
        else sairJogo();
    }
    return 0;
}
